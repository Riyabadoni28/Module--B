# Program of Depth First Search Alogthim
from collections import defaultdict

class GraphOfDepthFirstSearch:

	def __init__(self):
		self.graphofdepthfirstsearch = defaultdict(list)

	def addEdgeForNextNode(self, width, vertix):
		self.graphofdepthfirstsearch[width].append(vertix)

	def DepthFirstSearchUtil(self, vertix, vertixted):
		vertixted.add(vertix)
		print(vertix, end=' ')

		for next in self.graphofdepthfirstsearch[vertix]:
			if next not in vertixted:
				self.DepthFirstSearchUtil(next, vertixted)
	def DepthFirstSearch(self, vertix):
		vertixted = set()

		self.DepthFirstSearchUtil(vertix, vertixted)
graph = GraphOfDepthFirstSearch()
graph.addEdgeForNextNode(0, 1)
graph.addEdgeForNextNode(1, 1)
graph.addEdgeForNextNode(1, 2)
graph.addEdgeForNextNode(2, 2)
graph.addEdgeForNextNode(2, 3)
graph.addEdgeForNextNode(3, 0)

print("Following is DFS from (starting from vertex 2)")
graph.DepthFirstSearch(2)